rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Campaigns collection
    match /campaigns/{campaignId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.creatorId == request.auth.uid;
    }

    // Events collection
    match /events/{eventId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.creatorId == request.auth.uid;
    }

    // Partnership requests collection
    match /partnership_requests/{requestId} {
      allow read: if isAuthenticated() && (
        resource.data.requesterId == request.auth.uid ||
        resource.data.creatorId == request.auth.uid
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.requesterId == request.auth.uid ||
        resource.data.creatorId == request.auth.uid
      );
    }

    // Partnerships collection
    match /partnerships/{partnershipId} {
      allow read: if isAuthenticated() && (
        resource.data.partnerId == request.auth.uid ||
        resource.data.creatorId == request.auth.uid
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.partnerId == request.auth.uid ||
        resource.data.creatorId == request.auth.uid
      );
    }
  }
}